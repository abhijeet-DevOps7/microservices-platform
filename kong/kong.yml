_format_version: "3.0"
_transform: true

services:
  # User Service
  - name: user-service
    url: http://user-service:8001
    retries: 3
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    tags: ["microservices", "user"]
    routes:
      - name: user-service-route
        paths: ["/api/v1/users"]
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        strip_path: false
        preserve_host: false
        tags: ["user", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 100
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Product Service
  - name: product-service
    url: http://product-service:8002
    retries: 3
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    tags: ["microservices", "product"]
    routes:
      - name: product-service-route
        paths: ["/api/v1/products"]
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        strip_path: false
        preserve_host: false
        tags: ["product", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 200
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Order Service  
  - name: order-service
    url: http://order-service:8003
    retries: 2
    connect_timeout: 60000
    write_timeout: 120000
    read_timeout: 120000
    tags: ["microservices", "order"]
    routes:
      - name: order-service-route
        paths: ["/api/v1/orders"]
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        strip_path: false
        preserve_host: false
        tags: ["order", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 50
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Payment Service
  - name: payment-service
    url: http://payment-service:8004
    retries: 2
    connect_timeout: 60000
    write_timeout: 90000
    read_timeout: 90000
    tags: ["microservices", "payment"]
    routes:
      - name: payment-service-route
        paths: ["/api/v1/payments"]
        methods: ["GET", "POST", "PUT", "DELETE"]
        strip_path: false
        preserve_host: false
        tags: ["payment", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 30
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Inventory Service
  - name: inventory-service
    url: http://inventory-service:8005
    retries: 3
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    tags: ["microservices", "inventory"]
    routes:
      - name: inventory-service-route
        paths: ["/api/v1/inventory"]
        methods: ["GET", "POST", "PUT", "DELETE", "PATCH"]
        strip_path: false
        preserve_host: false
        tags: ["inventory", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 150
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Notification Service
  - name: notification-service
    url: http://notification-service:8006
    retries: 3
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    tags: ["microservices", "notification"]
    routes:
      - name: notification-service-route
        paths: ["/api/v1/notifications"]
        methods: ["GET", "POST", "PUT", "DELETE"]
        strip_path: false
        preserve_host: false
        tags: ["notification", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 100
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Analytics Service
  - name: analytics-service
    url: http://analytics-service:8007
    retries: 3
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    tags: ["microservices", "analytics"]
    routes:
      - name: analytics-service-route
        paths: ["/api/v1/analytics"]
        methods: ["GET", "POST"]
        strip_path: false
        preserve_host: false
        tags: ["analytics", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 80
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

  # Recommendation Service
  - name: recommendation-service
    url: http://recommendation-service:8008
    retries: 3
    connect_timeout: 60000
    write_timeout: 60000
    read_timeout: 60000
    tags: ["microservices", "recommendation"]
    routes:
      - name: recommendation-service-route
        paths: ["/api/v1/recommendations"]
        methods: ["GET", "POST"]
        strip_path: false
        preserve_host: false
        tags: ["recommendation", "api"]
        plugins:
          - name: rate-limiting
            config:
              minute: 120
              policy: local
          - name: cors
            config:
              origins: ["*"]
              methods: ["GET", "POST", "OPTIONS"]
              headers: ["Accept", "Accept-Version", "Content-Length", "Content-MD5", "Content-Type", "Date", "X-Auth-Token", "Authorization"]
              exposed_headers: ["X-Auth-Token"]
              credentials: true
              max_age: 3600
          - name: request-id
            config:
              header_name: X-Request-ID
              generator: uuid#counter
          - name: prometheus
            config:
              per_consumer: true
              status_code_metrics: true
              latency_metrics: true
              bandwidth_metrics: true

# Global plugins
plugins:
  - name: correlation-id
    config:
      header_name: X-Correlation-ID
      generator: uuid#counter
      echo_downstream: true
  
  - name: request-termination
    config:
      status_code: 503
      message: "Service temporarily unavailable"
    enabled: false

# Consumers for API authentication (if needed)
consumers:
  - username: microservices-client
    custom_id: microservices-client-001
    tags: ["client", "microservices"]

# Upstreams for load balancing (advanced configuration)
upstreams:
  - name: user-service-upstream
    algorithm: round-robin
    hash_on: none
    hash_fallback: none
    healthchecks:
      active:
        http_path: "/health"
        healthy:
          interval: 10
          successes: 3
        unhealthy:
          interval: 10
          http_failures: 3
          timeouts: 3
      passive:
        healthy:
          successes: 3
        unhealthy:
          http_failures: 3
          timeouts: 3
    targets:
      - target: user-service:8001
        weight: 100
        tags: ["user-service"]

  - name: product-service-upstream  
    algorithm: round-robin
    hash_on: none
    hash_fallback: none
    healthchecks:
      active:
        http_path: "/health"
        healthy:
          interval: 10
          successes: 3
        unhealthy:
          interval: 10
          http_failures: 3
          timeouts: 3
      passive:
        healthy:
          successes: 3
        unhealthy:
          http_failures: 3
          timeouts: 3
    targets:
      - target: product-service:8002
        weight: 100
        tags: ["product-service"]